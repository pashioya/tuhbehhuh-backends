plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
	id("org.owasp.dependencycheck") version "8.4.2"
	id "org.sonarqube" version "3.5.0.2730"
}

group = 'be.kdg.integration5.extractor'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


gitProperties {
	extProperty = 'gitProps' // git properties will be put in a map at project.ext.gitProps

}
generateGitProperties.outputs.upToDateWhen { false } // make sure the generateGitProperties task always executes (even when git.properties is not changed)

task printGitProperties(dependsOn: 'generateGitProperties') { // make sure generateGitProperties task to execute before accessing generated properties
	doLast {
		println "git.commit.id.abbrev=" + project.ext.gitProps['git.commit.id.abbrev']
	}
}

springBoot {
	buildInfo()
}

dependencyCheck {
	suppressionFile = rootProject.file('suppression.xml')
	analyzers {
		assemblyEnabled = false
	}
	formats = [ "HTML", "XML" ]
}

ext {
	set('springCloudAzureVersion', "5.7.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation 'mysql:mysql-connector-java:8.0.33'

    implementation 'org.modelmapper:modelmapper:3.1.1'


    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //https://www.archunit.org
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.1.0'
    testImplementation "org.testcontainers:junit-jupiter:1.19.1"
    testImplementation group: 'org.testcontainers', name: 'mysql', version: '1.19.1'
}


tasks.named('test') {
    useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
	}
}



bootBuildImage {
	builder = "paketobuildpacks/builder-jammy-base:latest"
	imageName = "integration5.azurecr.io/extractor-backend"
	tags = ["integration5.azurecr.io/extractor-backend:${-> project.ext.gitProps['git.commit.id.abbrev']}"]
	publish = true
	docker {
		publishRegistry {
			username =  System.getenv("DOCKER_USERNAME")
			password = System.getenv("DOCKER_PASSWORD")
		}
	}
}

bootBuildImage.dependsOn generateGitProperties


tasks.build.dependsOn bootBuildImage

tasks.named('test') {
	useJUnitPlatform()
}

